<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>服务器MySql数据库配置</title>
    <link href="/2022/03/19/%E6%9C%8D%E5%8A%A1%E5%99%A8MySql%E6%95%B0%E6%8D%AE%E5%BA%93%E9%85%8D%E7%BD%AE/"/>
    <url>/2022/03/19/%E6%9C%8D%E5%8A%A1%E5%99%A8MySql%E6%95%B0%E6%8D%AE%E5%BA%93%E9%85%8D%E7%BD%AE/</url>
    
    <content type="html"><![CDATA[<h3 id="安装mysql"><a href="#安装mysql" class="headerlink" title="安装mysql"></a>安装mysql</h3><p>​    执行以下指令</p><figure class="highlight axapta"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><pre><code class="hljs axapta">apt install mysql-<span class="hljs-keyword">server</span> mysql-<span class="hljs-keyword">client</span><br></code></pre></td></tr></table></figure><p>查看mysql初始随机用无名和密码：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">cat <span class="hljs-regexp">/etc/my</span>sql/debian.cnf<br></code></pre></td></tr></table></figure><img src="/2022/03/19/%E6%9C%8D%E5%8A%A1%E5%99%A8MySql%E6%95%B0%E6%8D%AE%E5%BA%93%E9%85%8D%E7%BD%AE/image-20220306172856106.png" alt="image-20220306172856106" style="zoom:50%;"><p>登录mysql</p><img src="/2022/03/19/%E6%9C%8D%E5%8A%A1%E5%99%A8MySql%E6%95%B0%E6%8D%AE%E5%BA%93%E9%85%8D%E7%BD%AE/image-20220306172950534.png" alt="image-20220306172950534" style="zoom:50%;"><p>修改用户名密码</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">ALTER</span> <span class="hljs-keyword">USER</span> <span class="hljs-string">&#x27;root&#x27;</span>@<span class="hljs-string">&#x27;localhost&#x27;</span> IDENTIFIED <span class="hljs-keyword">BY</span> <span class="hljs-string">&#x27;root&#x27;</span>;<br></code></pre></td></tr></table></figure><h3 id="mysql创建用户预授权"><a href="#mysql创建用户预授权" class="headerlink" title="mysql创建用户预授权"></a>mysql创建用户预授权</h3><h5 id="创建用户"><a href="#创建用户" class="headerlink" title="创建用户"></a>创建用户</h5><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs n1ql"><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">USER</span> <span class="hljs-string">&#x27;username&#x27;</span>@<span class="hljs-string">&#x27;host&#x27;</span> IDENTIFIED <span class="hljs-keyword">BY</span> <span class="hljs-string">&#x27;password&#x27;</span>;<br></code></pre></td></tr></table></figure><ul><li>username：你将创建的用户名</li><li>host：指定该用户在哪个主机上可以登陆，如果是本地用户可用localhost，如果想让该用户可以<strong>从任意远程主机登陆</strong>，可以使用通配符<code>%</code></li><li>password：该用户的登陆密码，密码可以为空，如果为空则该用户可以不需要密码登陆服务器</li></ul><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs n1ql"><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">USER</span> <span class="hljs-string">&#x27;wuhahe&#x27;</span>@<span class="hljs-string">&#x27;%&#x27;</span> IDENTIFIED <span class="hljs-keyword">BY</span> <span class="hljs-string">&#x27;root&#x27;</span>;# 实际执行<br></code></pre></td></tr></table></figure><h5 id="授权"><a href="#授权" class="headerlink" title="授权"></a>授权</h5><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">GRANT</span> <span class="hljs-keyword">privileges</span> <span class="hljs-keyword">ON</span> databasename.tablename <span class="hljs-keyword">TO</span> <span class="hljs-string">&#x27;username&#x27;</span>@<span class="hljs-string">&#x27;host&#x27;</span>;<br></code></pre></td></tr></table></figure><ul><li>privileges：用户的操作权限，如<code>SELECT</code>，<code>INSERT</code>，<code>UPDATE</code>等，如果要授予所的权限则使用<code>ALL</code></li><li>databasename：数据库名</li><li>tablename：表名，如果要授予该用户对所有数据库和表的相应操作权限则可用<code>*</code>表示，如<code>*.*</code></li></ul><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">GRANT</span> <span class="hljs-keyword">ALL</span> <span class="hljs-keyword">ON</span> *.* <span class="hljs-keyword">TO</span> <span class="hljs-string">&#x27;wuhahe&#x27;</span>@<span class="hljs-string">&#x27;%&#x27;</span>;# 实际执行<br></code></pre></td></tr></table></figure><h5 id="设置与更改用户密码"><a href="#设置与更改用户密码" class="headerlink" title="设置与更改用户密码"></a>设置与更改用户密码</h5><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">alter</span> <span class="hljs-keyword">user</span> <span class="hljs-string">&#x27;root&#x27;</span>@<span class="hljs-string">&#x27;localhost&#x27;</span> identified <span class="hljs-keyword">by</span> <span class="hljs-string">&#x27;123&#x27;</span>;# 与网上教程不一样，因为该数据库版本较新<br></code></pre></td></tr></table></figure><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">alter</span> <span class="hljs-keyword">user</span> <span class="hljs-string">&#x27;wuhahe&#x27;</span>@<span class="hljs-string">&#x27;%&#x27;</span> identified <span class="hljs-keyword">by</span> <span class="hljs-string">&#x27;root&#x27;</span>;# 实际执行<br></code></pre></td></tr></table></figure><h5 id="更新权限"><a href="#更新权限" class="headerlink" title="更新权限"></a>更新权限</h5><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs abnf">FLUSH PRIVILEGES<span class="hljs-comment">;</span><br></code></pre></td></tr></table></figure><h5 id="修改配置（重要）"><a href="#修改配置（重要）" class="headerlink" title="修改配置（重要）"></a>修改配置（重要）</h5><p>mysql连接配置文件存放再&#x2F;etc&#x2F;mysql&#x2F;mysql.conf.d&#x2F;下的mysqld</p><p>修改其mysqld中的<strong>bind-address</strong></p><p>将127.0.0.1修改为 0.0.0.0保存</p><p>最后重启mysql服务，未生效重启服务器。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>渗透测试笔记</title>
    <link href="/2022/03/16/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E7%AC%94%E8%AE%B0/"/>
    <url>/2022/03/16/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E7%AC%94%E8%AE%B0/</url>
    
    <content type="html"><![CDATA[<h2 id="域名"><a href="#域名" class="headerlink" title="域名"></a>域名</h2><h4 id="二级域名"><a href="#二级域名" class="headerlink" title="二级域名"></a>二级域名</h4><p>​    类似与news.baidu.com(非www.开头)</p><h4 id="多级域名"><a href="#多级域名" class="headerlink" title="多级域名"></a>多级域名</h4><p>​    shehui.news.baidu.com</p><h3 id="DNS"><a href="#DNS" class="headerlink" title="DNS"></a>DNS</h3><p>​    域名与IP地址的相互转换服务</p><h4 id="本地host文件"><a href="#本地host文件" class="headerlink" title="本地host文件"></a>本地host文件</h4><p>​    重定向解析IP地址</p><p><img src="/2022/03/16/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E7%AC%94%E8%AE%B0/image-20220223115609195-16471643885332.png" alt="image-20220223115609195"></p><p>例：当访问<a href="www.xiaodi8.com">www.xiaodi8.com</a>时，会先检查host文件，以host文件设置为首要选择，其次才会在DNS服务器上解析</p><p>（如果能修改对方的host文件，就可以将某域名重定向至自己的钓鱼网站达到目的）</p><h4 id="CDN"><a href="#CDN" class="headerlink" title="CDN"></a>CDN</h4><p>​    构建在现有网络之上的智能虚拟网络，将网站缓存至边缘服务器，提高用户访问相应速度，降低网络拥塞。</p><img src="/2022/03/16/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E7%AC%94%E8%AE%B0/image-20220224151156813-16471643885321.png" alt="image-20220224151156813" style="zoom:33%;"><p><strong>CDN会阻碍测试员的安全检测，因为访问到的不是真实网站，而是CDN缓存的服务器。</strong></p><h4 id="DNS攻击"><a href="#DNS攻击" class="headerlink" title="DNS攻击"></a><strong>DNS攻击</strong></h4><p>​    修改地址解析，将ip指向恶意地址。</p><h4 id="语言类型"><a href="#语言类型" class="headerlink" title="语言类型"></a>语言类型</h4><p>​    php适合小众型，javaweb适合大众型</p><p>越复杂的语言安全性越高</p><h2 id="后门"><a href="#后门" class="headerlink" title="后门"></a>后门</h2><p>​    在安全测试或非法入侵中经常会遗留一个后门文件，方便下次进行操作。（webshell）</p><h4 id="后门的实际意义"><a href="#后门的实际意义" class="headerlink" title="后门的实际意义"></a>后门的实际意义</h4><p>​    在获取相关权限，提供相关的控制通道</p><p>一般需要后门具有隐蔽性、免杀的特征</p><h2 id="WEB"><a href="#WEB" class="headerlink" title="WEB"></a>WEB</h2><h3 id="web的组成架构模型"><a href="#web的组成架构模型" class="headerlink" title="web的组成架构模型"></a>web的组成架构模型</h3><ul><li>网站源码：分脚本类型，分用用方向    （语言漏洞、函数漏洞、、）</li><li>操作系统：Windows、Linux    （系统漏洞）</li><li>中间件（搭建平台）：apache、iis、tomcat、nginx</li><li>数据库：acces、mysql、mssql、oracle、sybase、db2、postsql等</li></ul><h3 id="从web层面为主"><a href="#从web层面为主" class="headerlink" title="从web层面为主"></a>从web层面为主</h3><p>​    web用户大，漏洞多，比较与操作系统、数据库等更容易入侵。</p><h3 id="WEB相关安全漏洞"><a href="#WEB相关安全漏洞" class="headerlink" title="WEB相关安全漏洞"></a>WEB相关安全漏洞</h3><ul><li><strong>web源码类对应漏洞</strong></li></ul><p>​        SQL注入，上传，xss，代码执行，变量覆盖，反序列化等</p><ul><li><strong>web中间件对应漏洞</strong></li></ul><p>​        未授权访问等等（与web类似）</p><ul><li><strong>web数据库对应漏洞</strong></li></ul><p>​        弱口令，内核等</p><ul><li><strong>web系统层对应漏洞</strong></li></ul><p>​        提权，远程代码执行等</p><ul><li><strong>其他第三方对应漏洞</strong></li></ul><p>​        软件漏洞（软件出现漏洞也容易遭遇攻击）</p><ul><li><strong>app或pc应用结合类</strong></li></ul><p>​        许多app为简约成本套用网站框架，那安全检测app漏洞实际就是检测web。</p><p>​        app上许多功能即是web方向，如用户登陆注册操作等</p><h3 id="案例："><a href="#案例：" class="headerlink" title="案例："></a>案例：</h3><ul><li><strong>多级域名的枚举查找(原理，方式)</strong></li></ul><p>​    利用工具（利用前缀字典爆破，自动ping加上前缀的多级域名）</p><p>​    利用注册平台</p><ul><li><strong>DNS解析修改后分析（本地或服务）</strong></li></ul><p>​    上已述</p><ul><li><strong>EXE后门功能及危害及类似web后门</strong></li></ul><h3 id="http-https通信过程"><a href="#http-https通信过程" class="headerlink" title="http,https通信过程"></a>http,https通信过程</h3><img src="/2022/03/16/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E7%AC%94%E8%AE%B0/image-20220302225743570-16471643885333.png" alt="image-20220302225743570" style="zoom: 33%;"><p>https数据带加密，http是明文</p><h4 id="https"><a href="#https" class="headerlink" title="https"></a>https</h4><img src="/2022/03/16/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E7%AC%94%E8%AE%B0/image-20220302230040590-16471643885334.png" alt="image-20220302230040590" style="zoom:33%;"><h4 id="http"><a href="#http" class="headerlink" title="http"></a>http</h4><img src="/2022/03/16/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E7%AC%94%E8%AE%B0/image-20220302230213326-16471643885335.png" alt="image-20220302230213326" style="zoom: 50%;"><h2 id="Requests"><a href="#Requests" class="headerlink" title="Requests"></a>Requests</h2><p>​    请求数据包数据格式</p><ul><li><p><strong>请求行：</strong>请求类型&#x2F;请求资源路径、协议的版本和类型</p><ol><li>例：<strong>GET &#x2F;index.html HTTP&#x2F;1.1</strong></li></ol><img src="/2022/03/16/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E7%AC%94%E8%AE%B0/image-20220302231140049-16471643885336.png" alt="image-20220302231140049" style="zoom:50%;"></li><li><p><strong>请求头：</strong></p><img src="/2022/03/16/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E7%AC%94%E8%AE%B0/image-20220302231600925-16471643885337.png" alt="image-20220302231600925" style="zoom: 50%;"><img src="/2022/03/16/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E7%AC%94%E8%AE%B0/image-20220302231656027-16471643885338.png" alt="image-20220302231656027" style="zoom:50%;"><img src="/2022/03/16/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E7%AC%94%E8%AE%B0/image-20220302231728228-16471643885339.png" alt="image-20220302231728228" style="zoom:50%;"></li><li><p><strong>空行：</strong>最后一个请求头标之后是空行，发送回车符和退行，通知服务器以下不再有头标。</p></li><li><p><strong>请求数据：</strong>使用POST传送，最常使用的是 Content-Type 和 Content-Length 头标。</p></li></ul><h2 id="Response"><a href="#Response" class="headerlink" title="Response"></a>Response</h2><p>​    返回数据包数据格式</p><ul><li><p><strong>状态行：</strong>协议版本、数字形式的状态代码和状态描述，各元素之间以空格分隔。</p><img src="/2022/03/16/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E7%AC%94%E8%AE%B0/image-20220302233404344-164716438853310.png" alt="image-20220302233404344" style="zoom:50%;"></li><li><p><strong>响应头标：</strong>包含服务器类型、日期、长度、内容类型等</p><p>​        像请求头标一样，它们指出服务器的功能，标识出响应数据的细节。</p></li><li><p><strong>空行：</strong>响应头与响应体之间用空行隔开</p><p>​        最后一个响应头标之后是一个空行，发送回车符和退行，表明服务器以下不再有头标。</p></li><li><p><strong>响应数据：</strong>浏览器会将实体内容中的数据取出来，生成相应的页面（html）</p><p>​        HTML文档和图像等，也就是HTML本事。</p></li></ul><h2 id="搭建安全拓展"><a href="#搭建安全拓展" class="headerlink" title="搭建安全拓展"></a>搭建安全拓展</h2><ul><li><p><strong>域名ip目录解析安全问题</strong></p><p>web源码中敏感文件、后台路径，数据库配置文件，备份文件等</p><p>域名扫描，一般指向某个目录（根目录文件扫描不到）</p><p>ip扫描，指向更目录（更多的信息，例如备份文件，敏感信息）</p></li><li><p><strong>常见文件后缀解析对应安全</strong></p><p>脚本后缀对应解析（其他格式课相同-上传安全）、存在下载或为解析问题</p><p>网站中间件解析，如下图，.cdx和.cer后缀文件将解析成asp</p><p>（访问网站的时候出现不能解析，或与预期不符，可能就是搭建平台中间件采用默认修改，或添加了其他的设置在平台上）</p><p><img src="/2022/03/16/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E7%AC%94%E8%AE%B0/image-20220313145731507-164716438853311.png" alt="image-20220313145731507"></p></li><li><p><strong>常见安全测试中的安全防护</strong></p><p>产检防护中的ip验证，域名验证等</p><p>身份验证：匿名访问、、、、</p><p>ip地址和域名限制：黑名与白名单（学校或企业多见）</p></li><li><p><strong>web后门与用户及文件权限</strong></p><p>后门是否给予执行权限、后门是否给予操作目录或文件权限、后门是否给予其他用户权限</p><p>通过后门可以操作文件</p><p>来宾用户对应网站用户的权限，限制来宾用户权限可以防止后门进行文件操作</p><p>还可以设置<strong>目录</strong>执行权限，直接拒接执行文件的操作</p><p><strong>简单绕过</strong>：尝试更换目录（一般设置拒绝执行文件的目录是没有执行文件的目录，如image目录），如根目录或有执行文件的目录</p></li><li><p><strong>基于中间件的安全漏洞</strong><br>通过网站的响应数据包可知其搭建的中间件，利用其中间件的漏洞可进行渗透（如apache，网上有相关漏洞整理）</p></li></ul><h2 id="WEB源码拓展"><a href="#WEB源码拓展" class="headerlink" title="WEB源码拓展"></a>WEB源码拓展</h2>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>MySql笔记</title>
    <link href="/2022/03/16/MySql%E7%AC%94%E8%AE%B0/"/>
    <url>/2022/03/16/MySql%E7%AC%94%E8%AE%B0/</url>
    
    <content type="html"><![CDATA[<h4 id="启动MySQL："><a href="#启动MySQL：" class="headerlink" title="启动MySQL："></a>启动MySQL：</h4><p> mysql -u(用户名) -p(明文密码)    （-p后可以不写密码直接回车就可以输入不是明文的密码）</p><h2 id="数据库操作："><a href="#数据库操作：" class="headerlink" title="数据库操作："></a>数据库操作：</h2><ul><li><p>查看所有数据库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><pre><code class="hljs mysql">show databases;<br></code></pre></td></tr></table></figure></li><li><p>查看当前使用的数据库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select database();<br></code></pre></td></tr></table></figure></li><li><p>创建数据库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">create databases 数据库名 charset-utf8;<br></code></pre></td></tr></table></figure></li><li><p>删除数据库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">drop database 数据库名;<br></code></pre></td></tr></table></figure></li><li><p>使用数据库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">use database 数据库名;<br></code></pre></td></tr></table></figure></li><li><p>查看数据库中所有表</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">show tables;<br></code></pre></td></tr></table></figure></li></ul><h2 id="表操作"><a href="#表操作" class="headerlink" title="表操作"></a>表操作</h2><ul><li><p>查看表结构</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">desc 表名;<br></code></pre></td></tr></table></figure></li><li><p>创建表结构的语法</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs mysql">create table 表名(字段名 数据类型 可选的约束条件);<br>例：<br>create table TableName(id int unsigned auto_increment primary key not null,name varchar(10));<br></code></pre></td></tr></table></figure><p>创建了两个列，分别是int类型 id，字符串类型name</p><ul><li>int类型 id</li><li>unsigned 为“无符号”的意思。unsigned即为非负数，用此类型可以增加数据长度。</li><li>auto_increment 自增长</li><li>primary key 主键</li><li>not null 非空</li></ul></li><li><p>修改表–添加字段</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs mysql">alter table 表名 add 列名 类型;<br>例：<br>alter table TableName add NowTime datetime;<br></code></pre></td></tr></table></figure></li><li><p>修改表–修改字段–不重命名</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs mysql">alter table 表名 modify 列名 类型及约束;<br>例：<br>alter table TableName modify date nout noll;<br></code></pre></td></tr></table></figure></li><li><p>删除表–删除字段</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs mysql">alter table 表名 drop 列名;<br>例：<br>alter table TableName drop NowTime;<br></code></pre></td></tr></table></figure></li><li><p>删除表</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs mysql">drop table 表名;<br>例：<br>drop table TableName;<br></code></pre></td></tr></table></figure></li><li><p>查看表的创建语句–详细过程</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs mysql">show create table 表名;<br>例：<br>show create table TableName;<br></code></pre></td></tr></table></figure></li></ul><h2 id="查询基本使用"><a href="#查询基本使用" class="headerlink" title="查询基本使用"></a>查询基本使用</h2><ul><li><p>查询所有列</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select * from 表名;<br>例:<br>select * from TableName;<br></code></pre></td></tr></table></figure></li><li><p>查询指定列</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select 列1，列2， ...from 表名;<br>例：<br>select id, name from TableName;<br></code></pre></td></tr></table></figure></li></ul><h2 id="列操作"><a href="#列操作" class="headerlink" title="列操作"></a>列操作</h2><p>说明：主键列是自动增长，但是在全列插入时需要占位，通常使用空值(0或者null);字段默认 值default 来占位，插入成功后以实际数据为准  </p><ul><li><p><strong>全列插入</strong>：值的顺序与表结构字段的顺序完全一一对应，此时字段名列表不用填写</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs mysql">insert into 表名 values(...);<br>例：<br>insert into TableName values(0,&#x27;name&#x27;,&#x27;2022-3-16&#x27;);<br></code></pre></td></tr></table></figure></li><li><p><strong>部分列插入</strong>：值的顺序与给出的列顺序对应，此时需要根据实际的数据的特点填写对应字段列表</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs mysql">insert into 表名 (列1, ...) values(值1, ...);<br>例：<br>insert into students(id,name,NowTime )values(1,&#x27;name2&#x27;,&#x27;2022-3-16&#x27;);<br></code></pre></td></tr></table></figure><p>上面的语句一次可以向表中插入一行数据，还可以一次性插入多行数据，这样可以减少与数据库的通信。</p></li><li><p><strong>全列多行插入</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs mysql">insert into 表名 values(...),(...)...;<br>例：<br>insert into TableName values(0, &#x27;result1&#x27;),(0, &#x27;result2&#x27;);<br></code></pre></td></tr></table></figure></li><li><p><strong>部分列多行插入</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs mysql">insert into 表名(列1,...) values(值1,...),(值1,...)...;<br>例：<br>insert into TableName(name) values(&#x27;result1&#x27;),(&#x27;result2&#x27;),(&#x27;result3&#x27;);<br></code></pre></td></tr></table></figure></li><li><p><strong>修改</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs mysql">update 表名 set 列1=值1,列2=值2... where 条件;<br>例：<br>update TableName set name=&#x27;new name&#x27;,NowTime=&#x27;2022-3-17&#x27; where id=3;<br></code></pre></td></tr></table></figure><p>修改id等于3的name和NowTime值</p></li><li><p><strong>删除</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs mysql">delete from 表名 where 条件;<br>例：<br>delete from TableName where id=5;<br></code></pre></td></tr></table></figure></li><li><p><strong>as关键字</strong>：</p><ul><li><p>使用as给字段起别名</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select id as 序号,name as 名字, NowTime as 当前时间 from TableName;<br></code></pre></td></tr></table></figure></li><li><p>可以通过as给表起别名</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select t.id,t.name,t.NowTime from TableName as t;<br></code></pre></td></tr></table></figure></li></ul></li></ul><h2 id="条件语句查询"><a href="#条件语句查询" class="headerlink" title="条件语句查询"></a>条件语句查询</h2><ul><li>where 后面支持多种运算符，进行条件的处理  </li><li>比较运算符  </li><li>逻辑运算符  </li><li>模糊查询  </li><li>范围查询  </li><li>空判断</li></ul><h4 id="比较运算符："><a href="#比较运算符：" class="headerlink" title="比较运算符："></a>比较运算符：</h4><ul><li><p>等于：&#x3D; </p></li><li><p>大于：&gt;  </p></li><li><p>大于等于：&gt;&#x3D;  </p></li><li><p>小于：&lt;  </p></li><li><p>小于等于：&lt;  </p></li><li><p>不等于：!&#x3D;</p></li><li><p>或&lt;  </p></li><li><p>例1：查询编号大于3的学生  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select * from students where id 3;<br></code></pre></td></tr></table></figure></li><li><p>例2：查询编号不大于4的学生  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select * from students where id &lt; 4;<br></code></pre></td></tr></table></figure></li><li><p>例3：查询姓名不是“黄蓉”的学生  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select * from students where name !=黄蓉&#x27;;<br></code></pre></td></tr></table></figure></li><li><p>例4：查询没被删除的学生  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select * from students where is delete=0;<br></code></pre></td></tr></table></figure></li></ul><h4 id="逻辑运算符："><a href="#逻辑运算符：" class="headerlink" title="逻辑运算符："></a>逻辑运算符：</h4><ul><li><p>and</p></li><li><p>or</p></li><li><p>not</p></li><li><p>例5：查询编号大于3的女同学  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select * from students where id 3 and gender=0;<br></code></pre></td></tr></table></figure></li><li><p>例6：查询编号小于4或没被删除的学生  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select * from students where id 4 or is delete=0; <br></code></pre></td></tr></table></figure></li></ul><h4 id="模糊查询："><a href="#模糊查询：" class="headerlink" title="模糊查询："></a>模糊查询：</h4><ul><li><p>like</p></li><li><p>%（表示任意多个任意字符）</p></li><li><p>_（表示一个任意字符）</p></li><li><p>例7：查询姓黄的学生  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select * from students where name like &#x27;黄%&#x27;;<br></code></pre></td></tr></table></figure></li><li><p>例8：查询姓黄并且“名”是一个字的学生  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select * from students where name like &#x27;黄_&#x27;;<br></code></pre></td></tr></table></figure></li><li><p>例9：查询姓黄或叫靖的学生  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select * from students where name like &#x27;黄%&#x27; or name like &#x27;%靖&#x27;;<br></code></pre></td></tr></table></figure></li></ul><h4 id="范围查询"><a href="#范围查询" class="headerlink" title="范围查询"></a>范围查询</h4><p>范围查询分为连续范围查询和非连续范围查询 ,in表示在一个非连续的范围内  </p><ul><li><p>例10：查询编号是1或3或8的学生  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select * from students where id in(1,3,8);<br></code></pre></td></tr></table></figure><p>betweer ..ad.表示在一个连续的范围内  </p></li><li><p>例11：查询编号为3至8的学生  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select * from students where id between 3 and 8;<br></code></pre></td></tr></table></figure></li><li><p>例12：查询编号是3至8的男生  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select * from students where (id between 3 and 8) and gender=1;<br></code></pre></td></tr></table></figure></li></ul><h4 id="空判断"><a href="#空判断" class="headerlink" title="空判断"></a>空判断</h4><p>判断为空</p><ul><li><p>例13：查询没有填写身高的学生  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select * from students where height is null;  <br></code></pre></td></tr></table></figure><p>注意：1.null与是不同的2.is null   </p><p>判非空is not null</p></li><li><p>例14：查询填写了身高的学生  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select * from students where height is not null;  <br></code></pre></td></tr></table></figure></li><li><p>例15：查询填写了身高的男生  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select * from students where height is not null and gender=1<br></code></pre></td></tr></table></figure></li><li><p>优先级：</p><p>优先级由高到低的顺序为：小括号，not，比较运算符，逻辑运算符and比or先运算，如果同时出现并希望先运算or，需要结合()使用</p></li></ul><h4 id="排序"><a href="#排序" class="headerlink" title="排序"></a>排序</h4><ul><li><p>排序查询语法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select * from 表名 order by 列1 asc|desc [,列2 asc|desc,...];<br></code></pre></td></tr></table></figure></li><li><p>语法说明：</p><p>将行数据按照列1进行排序，如果某些行列1的值相同时，则按照列2排序，以此类推  </p><p>asc从小到大排列，即升序  </p><p>desc从大到小排序，即降序  </p><p>默认按照列值从小到大排列（即asc关键字）</p></li><li><p>例1：查询未删除男生信息，按学号降序  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select * from students where gender= 1 and is delete= 0 order by id desc; <br></code></pre></td></tr></table></figure></li><li><p>例2：查询未删除学生信息，按名称升序  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select * from students where is delete= 0 order by name;<br></code></pre></td></tr></table></figure></li><li><p>例3：显示所有的学生信息，先按照年龄从大-&gt;小排序，当年龄相同时按照身高从高-&gt;矮排 序  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select * from students order by age desc, height desc;<br></code></pre></td></tr></table></figure></li></ul><h4 id="分页"><a href="#分页" class="headerlink" title="分页"></a>分页</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select * from 表名 limit start=0,count;<br></code></pre></td></tr></table></figure><p>说明：</p><p>从start 开始，获取count 条数据  </p><p>start 默认值为0  </p><p>也就是当用户需要获取数据的前n条的时候可以直接写上 xxx limit n;</p><ul><li><p>例：查询前3行男生信息</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select * from students where gender=1 limit 0,3;<br></code></pre></td></tr></table></figure><p>已知：每页显示m条数据，当前显示第n页</p><p>求总页数：此段逻辑后面会在python项目中实现  </p><p>查询总条数p1  </p><p>使用p1除以m得到p2  </p><p>如果整除则p2为总数页  </p><p>如果不整除则p2+1为总页数  </p><p>获取第n页的数据的SQL语句求解思路  </p><p>第n页前有n-1页  </p><p>所在第n页前已经显示的数据的总量是(n-1)*m </p><p>*由于数据的下标从0开始所以第n页前所有的网页的下标是 0,1,…,(n-1)*m-1</p><p>所以第n页的数据起始下标是(n-1)*m</p><p>获取第n页数据的SQL语句</p><p>select * from students where is_delete&#x3D;0 limit (n-1)*m,m   </p><p>注意：在sql语句中limit 后不可以直接加公式</p></li></ul><h4 id="聚合函数"><a href="#聚合函数" class="headerlink" title="聚合函数"></a>聚合函数</h4><p>总数</p><p>count(*)表示计算总行数，括号中写星与列号，结果是相同的</p><ul><li><p>例1：查询学生总数  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select count(*) from students; <br></code></pre></td></tr></table></figure><p>最大值  </p><p>max(列)表示求此列的最大值  </p></li><li><p>例2：查询女生的编号最大值  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select max(id) from students where gender=2;  <br></code></pre></td></tr></table></figure><p>最小值  </p><p>min(列)表示求此列的最小值  </p></li><li><p>例3：查询未删除的学生最小编号  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select min( id) from students where is_delete=0;<br></code></pre></td></tr></table></figure><p>求和  </p><p>sum(列)表示求此列的和</p></li><li><p>例4：查询男生的总年龄  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select sum(age) from students where gender=1;<br></code></pre></td></tr></table></figure><p>平均年龄  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select sum(age)/count(*) from students where gender=1;<br></code></pre></td></tr></table></figure><p>平均值  </p><p>avg(列)表示求此列的平均值  </p></li><li><p>例5：查询未删除女生的编号平均值  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select avg(id) from students where is_delete= 0 and gender=2;<br></code></pre></td></tr></table></figure></li></ul><h4 id="分组"><a href="#分组" class="headerlink" title="分组"></a>分组</h4><p>group by   </p><p>group by + group concat()  </p><p>group_concat(字段名)根据分组结果，使用group _concat()来放置每一个分组中某字段的集合  </p><p>group by +聚合函数  </p><p>通过group_concat 的启发，我们既然可以统计出每个分组的某字段的值的集合，那么我们 也可以通过集合函数来对这个值的集合做一些操作  </p><p>group by + having   </p><p>having 条件表达式：用来过滤分组结果  </p><p>having 作用和lwhere 类似，但having只能用于group by 而where,是用来过滤表数据 </p><p>group by + with rollup   </p><p>with rollupl 的作用是：在最后新增一行，来记录当前表中该字段对应的操作结果，一般是汇总结果  </p><p>连接查询语法</p><p>对于外连接outer 关键字可以省略  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select * from 表1 inner或left或right join 表2 on 表1.列 运算符 表2.列;<br></code></pre></td></tr></table></figure><ul><li><p>例1：使用内连接查询班级表与学生表  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select * from students inner join classes on students.cls_id = classes.id;<br></code></pre></td></tr></table></figure></li><li><p>例2：使用左连接查询班级表与学生表  </p><p>此处使用了as为表起别名，目的是编写简单  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select * from students as s left join classes as c on s.cls_id = c.id;<br></code></pre></td></tr></table></figure></li><li><p>例3：使用右连接查询班级表与学生表  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select * from students as s right join classes as c on s.cls_id c.id;<br></code></pre></td></tr></table></figure></li><li><p>例4：查询学生姓名及班级名称  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select s.name,c.name from students as s inner join classes as c on s.cls_id = c.id<br></code></pre></td></tr></table></figure></li></ul><p>子查询：</p><p>在一个select 语句中，嵌入了另外一个select 语句，那么被嵌入的select语句称之为子查询语句，外部那个select语句则称为主查询  </p><p>主查询和子查询的关系  </p><p>子查询是嵌入到主查询中  </p><p>子查询是辅助主查询的要么充当条件要么充当数据源  </p><p>子查询是可以独立存在的语句是一条完整的select 语句  </p><p>标量子查询  </p><p>查询班级学生平均年龄  </p><p>查询大于平均年龄的学生  </p><p>查询班级学生的平均身高  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select * from students where age &gt; (select avg(age) from students);<br></code></pre></td></tr></table></figure><p>列级子查询  </p><p>查询还有学生在班的所有班级名字</p><p>查询还有学生在班的所有班级名字  </p><p>找出学生表中所有的班级id </p><p>找出班级表中对应的名字  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select name from classes where id in (select cls_id from students);<br></code></pre></td></tr></table></figure><p>行级子查询  </p><p>需求：查找班级年龄最大身高最高的学生  </p><p>行元素：将多个字段合成一个行元素在行级子查询中会使用到行元素  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">select * from students where (height,age) = (select max(height),max(age) from students);<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>利用hexo+Github搭建博客</title>
    <link href="/2022/03/03/%E5%88%A9%E7%94%A8hexo-Github%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"/>
    <url>/2022/03/03/%E5%88%A9%E7%94%A8hexo-Github%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/</url>
    
    <content type="html"><![CDATA[<p><strong>环境需要</strong>：nodejs，git，hexo</p><p>下载安装nodejs，git</p><h2 id="配置SSH-key"><a href="#配置SSH-key" class="headerlink" title="配置SSH key"></a>配置SSH key</h2><ul><li><p>设置密钥</p><p>打开git bash</p></li></ul><figure class="highlight jboss-cli"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><pre><code class="hljs jboss-cli">git config <span class="hljs-params">--global</span> user.name <span class="hljs-string">&quot;wuhahe&quot;</span><span class="hljs-comment"># 设置用户名</span><br>git config <span class="hljs-params">--global</span> user.email <span class="hljs-string">&quot;529516310@qq.com&quot;</span><span class="hljs-comment"># 设置用户名邮箱</span><br>git config <span class="hljs-params">--list</span><br></code></pre></td></tr></table></figure><img src="/2022/03/03/%E5%88%A9%E7%94%A8hexo-Github%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/image-20220303222320461.png" alt="image-20220303222320461" style="zoom: 50%;"><p>​        继续输入命令，修改邮箱</p><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs excel">ssh-keygen -<span class="hljs-built_in">t</span> rsa -C <span class="hljs-string">&quot;529516310@qq.com&quot;</span><br></code></pre></td></tr></table></figure><img src="/2022/03/03/%E5%88%A9%E7%94%A8hexo-Github%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/image-20220303222620044.png" alt="image-20220303222620044" style="zoom: 50%;"><p>​        进入.ssh文件夹，打开id_rsa.pub，全选复制密钥</p><ul><li><p>配置github</p><p>依次进入settings \ SSH and GPGkeys 点击New SSH key添加</p></li></ul><img src="/2022/03/03/%E5%88%A9%E7%94%A8hexo-Github%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/image-20220303223100169.png" alt="image-20220303223100169" style="zoom: 33%;"><p>​        设置完成！</p><h2 id="安装与使用hexo"><a href="#安装与使用hexo" class="headerlink" title="安装与使用hexo"></a><strong>安装与使用hexo</strong></h2><p><strong>下载安装hexo</strong></p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmake">npm <span class="hljs-keyword">install</span> -g hexo<br></code></pre></td></tr></table></figure><p>创建blog文件夹，用git打开hexo子文件夹，未来该文件夹用来存放代码。</p><ul><li><strong>初始化：</strong></li></ul><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs csharp">hexo <span class="hljs-keyword">init</span><span class="hljs-meta"># j</span><br></code></pre></td></tr></table></figure><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">hexo</span> g<span class="hljs-comment"># 生成静态文件</span><br>hexo s<span class="hljs-comment"># 启动本地服务</span><br></code></pre></td></tr></table></figure><p>​        接下来浏览器访问 <a href="http://localhost:4000，内容为hexo初始化自带的hello">http://localhost:4000，内容为hexo初始化自带的hello</a> world文章</p><img src="/2022/03/03/%E5%88%A9%E7%94%A8hexo-Github%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/image-20220303010919115.png" alt="image-20220303010919115" style="zoom: 25%;"><ul><li><p><strong>部署到GitHub</strong></p><p>修改目录下的 _config.yml中的deploy字段，添加仓库地址以及设置分支</p><p><img src="/2022/03/03/%E5%88%A9%E7%94%A8hexo-Github%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/image-20220303224123266.png" alt="image-20220303224123266"></p></li></ul><p>​        hexo提供了hexo-deployer-git插件，使用户能方便的部署到github仓库</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmake">npm <span class="hljs-keyword">install</span> hexo-deployer-git<br></code></pre></td></tr></table></figure><p>​        至此执行命令 <code>hexo d</code> 即可部署到github仓库</p><h2 id="设置主题"><a href="#设置主题" class="headerlink" title="设置主题"></a>设置主题</h2><p>有许多用户开源的主题可以使用，这里使用了 hexo-theme-yun，主题文档：<a href="https://yun.yunyoujun.cn/guide/">https://yun.yunyoujun.cn/guide/</a></p><ul><li><p><strong>下载主题</strong></p><p>根据hexo文档提供的指令下载</p><figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs coffeescript"><span class="hljs-built_in">npm</span> i hexo-theme-yun<br></code></pre></td></tr></table></figure></li><li><p><strong>修改 _config.yml</strong></p><p>找到theme字段，改为<code>theme: yun</code></p></li><li><p><strong>安装主题所需插件</strong></p><p>除了hexo自带的stylus，该主题还需要pug</p><figure class="highlight mel"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mel">npm install hexo-<span class="hljs-keyword">render</span>-pug hexo-<span class="hljs-keyword">renderer</span>-stylus<br></code></pre></td></tr></table></figure></li><li><p><strong>自定义主题配置</strong></p><p>根据主题文档，可以再目录下新建文件 _config.yun.yml，主题会自动载入该文件下的配置。</p><p>譬如修改头像，在 _config.yun.yml文件中添加：</p><p>在source下新建文件夹images</p><img src="/2022/03/03/%E5%88%A9%E7%94%A8hexo-Github%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/image-20220303230254080.png" alt="image-20220303230254080" style="zoom: 67%;"></li></ul><p>​        更多自定义配置参考主题文档</p><h2 id="写博客"><a href="#写博客" class="headerlink" title="写博客"></a>写博客</h2><ul><li><p><strong>修改 _config.yml文件</strong></p><p>找到 post_asset_folder字段，将false改为true。</p><p>修改后，每当我们新建一个文章，hexo就会自动生成一个主题同名文件夹，用来存放文章内的图片。</p><p>执行命令  :</p><figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs haxe">hexo <span class="hljs-keyword">new</span> <span class="hljs-type"></span>&quot;<span class="hljs-keyword">new</span><span class="hljs-type"></span>博客<span class="hljs-string">&quot;</span><br></code></pre></td></tr></table></figure></li><li><p><strong>利用Typora撰写</strong></p><p>对以下选择进行勾选，这样我们复制图片在Typora时会自动在hexo生成的文件夹中保存。</p><img src="/2022/03/03/%E5%88%A9%E7%94%A8hexo-Github%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/image-20220303233844272.png" alt="image-20220303233844272" style="zoom: 50%;"></li></ul><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><ul><li><p><strong>绑定域名</strong></p><p>需要先设定域名解析到GitHub仓库ip</p><p>在source文件夹下新建CNAME文件，内容为需要绑定的域名</p></li></ul><img src="/2022/03/03/%E5%88%A9%E7%94%A8hexo-Github%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/image-20220303234439102.png" alt="image-20220303234439102" style="zoom: 80%;"><p>​        部署完成后就可以通过访问hah3.com查看博客了</p><ul><li><p><strong>浏览器图片不显示</strong></p><p>图片地址重定向错误，安装插件解决，执行命令：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">npm install https:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/CodeFalling/</span>hexo-asset-image --save<br></code></pre></td></tr></table></figure></li><li><p><strong>启动本地服务显示正常，部署到github后出现排版混乱</strong></p><p>需强制刷新浏览器缓存，shift+f5刷新，才能显示修改后的新界面</p></li></ul>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
